(()=>{"use strict";const t=class{constructor(){this.modal=null,this.modalContent=null,this.isOpen=!1,this.createModal(),this.bindEvents()}createModal(){this.modal=document.createElement("div"),this.modal.className="media-modal",this.modal.innerHTML='\n            <div class="modal-backdrop">\n                <div class="modal-container">\n                    <div class="modal-header">\n                        <button class="modal-close" aria-label="Close modal">&times;</button>\n                    </div>\n                    <div class="modal-body">\n                        <div class="modal-content"></div>\n                    </div>\n                </div>\n            </div>\n        ',document.body.appendChild(this.modal),this.modalContent=this.modal.querySelector(".modal-content")}bindEvents(){const t=this.modal.querySelector(".modal-close"),e=this.modal.querySelector(".modal-backdrop");t.addEventListener("click",()=>this.close()),e.addEventListener("click",t=>{t.target===e&&this.close()}),document.addEventListener("keydown",t=>{"Escape"===t.key&&this.isOpen&&this.close()}),this.bindMediaLinks()}bindMediaLinks(){document.addEventListener("click",t=>{const e=t.target;"IMG"===e.tagName&&this.isLocalImage(e.src)&&(t.preventDefault(),this.openImage(e.src,e.alt||"Image")),"A"===e.tagName&&this.isLocalImage(e.href)&&(t.preventDefault(),this.openImage(e.href,e.textContent||"Image")),"A"===e.tagName&&this.isYouTubeLink(e.href)&&(t.preventDefault(),this.openYouTube(e.href,e.textContent))})}isLocalImage(t){try{const e=new URL(t,window.location.href);return e.hostname===window.location.hostname&&/\.(png|jpg|jpeg|gif|webp)$/i.test(e.pathname)}catch{return!1}}isYouTubeLink(t){try{const e=new URL(t);return e.hostname.includes("youtube.com")||e.hostname.includes("youtu.be")}catch{return!1}}getYouTubeEmbedUrl(t){try{const e=new URL(t);let s="";return e.hostname.includes("youtu.be")?s=e.pathname.slice(1):e.hostname.includes("youtube.com")&&(s=e.searchParams.get("v")),s?`https://www.youtube.com/embed/${s}`:null}catch{return null}}openImage(t,e="Image"){this.modalContent.innerHTML=`\n            <img src="${t}" alt="${e}" class="modal-image">\n            <div class="modal-caption">${e}</div>\n        `,this.open()}openYouTube(t,e="Video"){const s=this.getYouTubeEmbedUrl(t);s&&(this.modalContent.innerHTML=`\n            <div class="modal-video-container">\n                <iframe \n                    src="${s}" \n                    title="${e}"\n                    frameborder="0" \n                    allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" \n                    allowfullscreen\n                    class="modal-video">\n                </iframe>\n            </div>\n            <div class="modal-caption">${e}</div>\n        `,this.open())}open(){this.modal.classList.add("active"),this.isOpen=!0,document.body.style.overflow="hidden",this.modal.querySelector(".modal-close").focus()}close(){this.modal.classList.remove("active"),this.isOpen=!1,document.body.style.overflow="",this.modalContent.innerHTML=""}};class e{constructor(t){this.tracks=t,this.currentTrack=0,this.isPlaying=!1,this.sound=null,this.volume=1,this.playButton=document.getElementById("playButton"),this.progressBar=document.getElementById("progressBar"),this.progressFill=document.getElementById("progressFill"),this.timeDisplay=document.getElementById("timeDisplay"),this.lyricsContainer=document.getElementById("lyricsContainer"),this.lyricsContent=document.getElementById("lyricsContent"),this.lyricsText=document.getElementById("lyricsText"),this.lyricsTitle=document.getElementById("lyricsTitle"),this.currentTrackTitle=document.getElementById("currentTrackTitle"),this.currentTrackArtist=document.getElementById("currentTrackArtist"),this.initializePlayer(),this.bindEvents()}initializePlayer(){this.loadTrack(this.currentTrack),this.updateLyrics()}loadTrack(t){this.sound&&(this.sound.stop(),this.sound.unload());const e=this.tracks[t];this.sound=new Howl({src:[e.url],html5:!0,volume:this.volume,onend:()=>this.nextTrack()}),this.updateTrackDisplay()}play(){this.sound&&(this.sound.play(),this.isPlaying=!0,this.playButton.textContent="⏸ Pause",this.updateProgress())}pause(){this.sound&&(this.sound.pause(),this.isPlaying=!1,this.playButton.textContent="▶ Play")}togglePlay(){this.isPlaying?this.pause():this.play()}nextTrack(){this.currentTrack=(this.currentTrack+1)%this.tracks.length,this.loadTrack(this.currentTrack),this.isPlaying&&this.play()}selectTrack(t){this.currentTrack=t,this.loadTrack(t),this.play()}updateProgress(){if(!this.sound||!this.isPlaying)return;const t=this.sound.seek()||0,e=this.sound.duration()||0;if(e>0){const s=t/e*100;this.progressFill.style.width=s+"%",this.timeDisplay.textContent=this.formatTime(t)}this.isPlaying&&requestAnimationFrame(()=>this.updateProgress())}updateTrackDisplay(){document.querySelectorAll(".track").forEach(t=>{t.classList.remove("playing")});const t=document.querySelector(`[data-track-id="${this.currentTrack+1}"]`);t&&t.classList.add("playing"),this.updateCurrentlyPlaying(),this.updateLyrics()}updateCurrentlyPlaying(){const t=this.tracks[this.currentTrack];this.currentTrackTitle.textContent=t?t.title:"Select a track to play"}updateLyrics(){const t=this.tracks[this.currentTrack];if(t){this.lyricsTitle.textContent=`Lyrics - ${t.title}`,this.lyricsContainer.style.display="block",document.querySelectorAll(".lyrics-text").forEach(t=>{t.classList.add("hidden")});const e=document.getElementById(`lyricsText-${t.id}`);e&&e.classList.remove("hidden")}else this.lyricsContainer.style.display="block"}formatTime(t){return`${Math.floor(t/60)}:${Math.floor(t%60).toString().padStart(2,"0")}`}bindEvents(){this.playButton.addEventListener("click",()=>this.togglePlay()),this.progressBar.addEventListener("click",t=>{if(!this.sound)return;const e=this.progressBar.getBoundingClientRect(),s=(t.clientX-e.left)/e.width,i=this.sound.duration();i>0&&this.sound.seek(i*s)}),document.querySelectorAll(".track").forEach((t,e)=>{t.addEventListener("click",()=>this.selectTrack(e))})}}document.addEventListener("DOMContentLoaded",()=>{const s=window.albumData;s&&s.tracks&&new e(s.tracks),new t})})();